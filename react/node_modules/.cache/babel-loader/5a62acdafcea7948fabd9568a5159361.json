{"ast":null,"code":"var express = require('express');\n\nvar router = express.Router();\n\nvar Tree = require('./models/tree'); //get a song tree from the db\n\n\nrouter.get('/trees/:id', function (req, res, next) {\n  Tree.findOne({\n    _id: req.params.id\n  }).then(function (tree) {\n    res.send(tree);\n  }).catch(next);\n}); //get a track from the db\n\nrouter.get('/trees/:id/:trackid', function (req, res, next) {\n  Tree.findOne({\n    _id: req.params.id\n  }).then(function (tree) {\n    tree.findOne({\n      _id: req.params.trackid\n    }).then(function (track) {\n      res.send(track);\n    }).catch(next);\n  }).catch(next);\n}); //add a new track to a tree in the db\n\nrouter.post('/trees/:id', function (req, res, next) {\n  Tree.findOne({\n    _id: req.params.id\n  }).then(function (tree) {\n    tree.create(req.body).then(function (track) {\n      res.send(track);\n    }).catch(next);\n  }).catch(next);\n}); //delete a track from a tree in the db\n\nrouter.delete('/trees/:id/:trackid', function (req, res, next) {\n  Tree.findOne({\n    _id: req.params.id\n  }).then(function (tree) {\n    tree.findByIdAndRemove({\n      _id: req.params.trackid\n    }).then(function (track) {\n      res.send(track);\n    }).catch(next);\n  }).catch(next);\n}); //delete a tree from the db\n\nrouter.delete('/trees/:id', function (req, res, next) {\n  tree.findByIdAndRemove({\n    _id: req.params.id\n  }).then(function (tree) {\n    res.send(tree);\n  }).catch(next);\n});\nmodule.exports = router;","map":{"version":3,"sources":["/Users/kososuzuki/Desktop/aaa/src/routes/api.js"],"names":["express","require","router","Router","Tree","get","req","res","next","findOne","_id","params","id","then","tree","send","catch","trackid","track","post","create","body","delete","findByIdAndRemove","module","exports"],"mappings":"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","sourcesContent":["const express = require('express')\nconst router = express.Router()\nconst Tree = require('./models/tree')\n\n//get a song tree from the db\nrouter.get('/trees/:id', function(req, res, next){\n\tTree.findOne({_id: req.params.id}).then(function(tree){\n\t\tres.send(tree)\n\t}).catch(next)\n})\n\n//get a track from the db\nrouter.get('/trees/:id/:trackid', function(req, res, next){\n\tTree.findOne({_id: req.params.id}).then(function(tree){\n\t\ttree.findOne({_id: req.params.trackid}).then(function(track){\n\t\t\tres.send(track)\n\t    }).catch(next)\n\t}).catch(next)\n})\n\n//add a new track to a tree in the db\nrouter.post('/trees/:id', function(req, res, next){\n\tTree.findOne({_id: req.params.id}).then(function(tree){\n\t\ttree.create(req.body).then(function(track){\n\t\t\tres.send(track)\n\t    }).catch(next)\n\t}).catch(next)\n})\n\n//delete a track from a tree in the db\nrouter.delete('/trees/:id/:trackid', function(req, res, next){\n\tTree.findOne({_id: req.params.id}).then(function(tree){\n\t\ttree.findByIdAndRemove({_id: req.params.trackid}).then(function(track){\n\t\t\tres.send(track)\n\t    }).catch(next)\n\t}).catch(next)\n})\n\n//delete a tree from the db\nrouter.delete('/trees/:id', function(req, res, next){\n\ttree.findByIdAndRemove({_id: req.params.id}).then(function(tree){\n\t\tres.send(tree)\n\t}).catch(next)\n})\n\nmodule.exports = router\n\n"]},"metadata":{},"sourceType":"module"}