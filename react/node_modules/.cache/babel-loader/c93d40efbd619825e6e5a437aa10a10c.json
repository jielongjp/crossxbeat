{"ast":null,"code":"var _jsxFileName = \"/Users/kososuzuki/Desktop/aaa/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 6\n  },\n  __self: this\n}), document.getElementById('root'));\n\nvar express = require('express');\n\nvar app = express();\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost/treedb', {\n  useNewUrlParser: true\n});\nmongoose.Promise = global.Promise; //app.use(express.static('App'))\n\n/*app.get('/', function(req, res){\n  res.render('App');\n});*/\n//app.use(express.static('public'))\n\napp.use(bodyParser.json()); //initialize routes\n\napp.use('/api', require('./routes/api')); //error handling middleware\n\napp.use(function (err, req, res, next) {\n  res.status(422).send({\n    error: err.message\n  }); //console.log(err)\n});\napp.listen(process.env.port || 3000, function () {\n  console.log('now listening for requests');\n});","map":{"version":3,"sources":["/Users/kososuzuki/Desktop/aaa/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","express","require","app","bodyParser","mongoose","connect","useNewUrlParser","Promise","global","use","json","err","req","res","next","status","send","error","message","listen","process","env","port","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEAD,QAAQ,CAACE,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACAG,QAAQ,CAACC,OAAT,CAAiB,4BAAjB,EAA+C;AAACC,EAAAA,eAAe,EAAE;AAAlB,CAA/C;AACAF,QAAQ,CAACG,OAAT,GAAmBC,MAAM,CAACD,OAA1B,C,CAEA;;AAEA;;;AAGA;;AAEAL,GAAG,CAACO,GAAJ,CAAQN,UAAU,CAACO,IAAX,EAAR,E,CAEA;;AACAR,GAAG,CAACO,GAAJ,CAAQ,MAAR,EAAgBR,OAAO,CAAC,cAAD,CAAvB,E,CAEA;;AACAC,GAAG,CAACO,GAAJ,CAAQ,UAASE,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA6B;AACpCD,EAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,IAAAA,KAAK,EAAEN,GAAG,CAACO;AAAZ,GAArB,EADoC,CAEpC;AACA,CAHD;AAKAhB,GAAG,CAACiB,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAA/B,EAAqC,YAAU;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,CAFD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nconst express = require('express');\nconst app = express()\nconst bodyParser = require('body-parser')\nconst mongoose = require('mongoose')\nmongoose.connect('mongodb://localhost/treedb', {useNewUrlParser: true})\nmongoose.Promise = global.Promise\n\n//app.use(express.static('App'))\n\n/*app.get('/', function(req, res){\n  res.render('App');\n});*/\n//app.use(express.static('public'))\n\napp.use(bodyParser.json())\n\n//initialize routes\napp.use('/api', require('./routes/api'))\n\n//error handling middleware\napp.use(function(err, req, res, next){\n\tres.status(422).send({error: err.message})\n\t//console.log(err)\n})\n\napp.listen(process.env.port || 3000, function(){\n\tconsole.log('now listening for requests')\n})\n"]},"metadata":{},"sourceType":"module"}