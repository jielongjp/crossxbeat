{"ast":null,"code":"var _jsxFileName = \"/Users/kososuzuki/Desktop/crossxbeat/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}), document.getElementById('root')); //my code:\n\nvar express = require('express');\n\nvar app = express();\n\nvar bodyParser = require('body-parser');\n\nvar mongoose = require('mongoose');\n\nmongoose.connect('mongodb://localhost/treedb');\nmongoose.Promise = global.Promise;\napp.use(bodyParser.json()); //initialize routes\n\napp.use('/api', require('./routes/api'));","map":{"version":3,"sources":["/Users/kososuzuki/Desktop/crossxbeat/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","express","require","app","bodyParser","mongoose","connect","Promise","global","use","json"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACAD,QAAQ,CAACE,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAGA;;AAEA,IAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,IAAMG,UAAU,GAAGF,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AAGAG,QAAQ,CAACC,OAAT,CAAiB,4BAAjB;AACAD,QAAQ,CAACE,OAAT,GAAmBC,MAAM,CAACD,OAA1B;AAEAJ,GAAG,CAACM,GAAJ,CAAQL,UAAU,CAACM,IAAX,EAAR,E,CAEA;;AACAP,GAAG,CAACM,GAAJ,CAAQ,MAAR,EAAgBP,OAAO,CAAC,cAAD,CAAvB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n//my code:\n\nconst express = require('express');\nconst app = express()\nconst bodyParser = require('body-parser')\nconst mongoose = require('mongoose')\n\n\nmongoose.connect('mongodb://localhost/treedb')\nmongoose.Promise = global.Promise\n\napp.use(bodyParser.json())\n\n//initialize routes\napp.use('/api', require('./routes/api'))\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}