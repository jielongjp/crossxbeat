{"ast":null,"code":"var _jsxFileName = \"/Users/kososuzuki/Desktop/aaa/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'express';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7\n  },\n  __self: this\n}), document.getElementById('root'));\n/*\nconst express = require('express');\nconst app = express()\nconst bodyParser = require('body-parser')\nconst mongoose = require('mongoose')\n\n\nmongoose.connect('mongodb://localhost/treedb', {useNewUrlParser: true})\nmongoose.Promise = global.Promise\n\napp.use(bodyParser.json())\n\n//initialize routes\napp.use('/api', require('./routes/api'))\n\n//error handling middleware\napp.use(function(err, req, res, next){\n\tres.status(422).send({error: err.message})\n\t//console.log(err)\n})\n\napp.listen(process.env.port || 3000, function(){\n\tconsole.log('now listening for requests')\n})\n*/","map":{"version":3,"sources":["/Users/kososuzuki/Desktop/aaa/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,SAAP;AAEAD,QAAQ,CAACE,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AAEA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'express';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n/*\nconst express = require('express');\nconst app = express()\nconst bodyParser = require('body-parser')\nconst mongoose = require('mongoose')\n\n\nmongoose.connect('mongodb://localhost/treedb', {useNewUrlParser: true})\nmongoose.Promise = global.Promise\n\napp.use(bodyParser.json())\n\n//initialize routes\napp.use('/api', require('./routes/api'))\n\n//error handling middleware\napp.use(function(err, req, res, next){\n\tres.status(422).send({error: err.message})\n\t//console.log(err)\n})\n\napp.listen(process.env.port || 3000, function(){\n\tconsole.log('now listening for requests')\n})\n*/"]},"metadata":{},"sourceType":"module"}